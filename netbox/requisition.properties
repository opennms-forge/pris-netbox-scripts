### File: netbox/requisition.properties
source = jdbc

netbox.server = YOUR-NETBOX-URL
netbox.url = https://${netbox.server}/dcim/devices/

# This requisition will create a JDBC connection to the Netbox database to query devices to be provisioned into OpenNMS.
# It is set to filter only devices that are marked as "Active" with a primary IPv4 address and a custom "Monitor" field.

# Create the custom Netbox fields as described below, and update the values below with their ID from the extras_customfield table.
# Since NetBox does not have separate fields for address/city/state/zip, this assumes the use of a coma delimiter inside the site address field.
# Boolean field to indicate if the device should be "Monitored".
netbox.monitor = NETBOX-MONITOR-FIELD_ID
# Selection field to choose a category to assign to the node.
netbox.category = NETBOX-CATEGORY-FIELD_ID


source.driver = org.postgresql.Driver
source.url = jdbc:postgresql://${netbox.server}/netbox
source.user = NETBOX-SQL-USERNAME
source.password = NETBOX-SQL-PASSWORD

source.selectStatement = SELECT d.id AS foreign_id, \
    d.name AS node_label, \
    (case when ip4.address is null then host(ip6.address) else host(ip4.address) end) AS ip_address, \
    site.name AS asset_building, \
    rg.name AS asset_room, \
    trim(both from (split_part(site.physical_address, ',', 1))) AS asset_address1, \
    trim(both from (split_part(site.physical_address, ',', 2))) AS asset_city, \
    trim(both from (split_part(site.physical_address, ',', 3))) AS asset_state, \
    trim(both from (split_part(site.physical_address, ',', 4))) AS asset_zip, \
    r.name AS asset_rack, \
    m.name AS asset_manufacturer, \
    d.asset_tag AS asset_assetnumber, \
    dt.model AS asset_model, \
    d.serial AS asset_serial, \
    '<a href=${netbox.url}' || d.id || ' target="_blank">'|| '${netbox.url}' || d.id || '</a>'  AS asset_description, \
    c2.value AS asset_Category, \
    dr.slug AS Cat, \
    'P' AS mgmttype, \
    1 AS interfacestatus \
   FROM dcim_device d \
     LEFT OUTER JOIN extras_customfieldvalue v ON d.id = v.obj_id AND v.field_id = ${netbox.monitor} \
     LEFT OUTER JOIN ipam_ipaddress ip4 ON d.primary_ip4_id = ip4.id \
     LEFT OUTER JOIN ipam_ipaddress ip6 ON d.primary_ip6_id = ip6.id \
     LEFT OUTER JOIN dcim_site site ON d.site_id = site.id \
     LEFT OUTER JOIN dcim_devicetype dt ON d.device_type_id = dt.id \
     LEFT OUTER JOIN dcim_devicerole dr ON d.device_role_id = dr.id \
     LEFT OUTER JOIN dcim_manufacturer m ON dt.manufacturer_id = m.id \
     LEFT OUTER JOIN dcim_rack r ON d.rack_id = r.id \
     LEFT OUTER JOIN dcim_rackgroup rg ON r.group_id = rg.id \
     LEFT OUTER JOIN extras_customfieldvalue c ON d.id = c.obj_id AND c.field_id = ${netbox.category} \
     LEFT OUTER JOIN extras_customfieldchoice c2 ON c.serialized_value::int = c2.id \
  WHERE d.status = 'active' AND v.serialized_value = '1' AND (d.primary_ip4_id > 0 or d.primary_ip6_id > 0) \
  ORDER BY d.id;

### default no-operation mapper
mapper = echo
